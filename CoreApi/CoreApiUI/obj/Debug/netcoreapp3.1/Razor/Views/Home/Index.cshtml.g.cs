#pragma checksum "E:\Project\CoreApi-28-02-2020\AgnejaDemo\CoreApi-28-02-2020\CoreApi\CoreApiUI\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b1985fa2eb2d2c8e2101547ce0893da17e86bd5b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Project\CoreApi-28-02-2020\AgnejaDemo\CoreApi-28-02-2020\CoreApi\CoreApiUI\Views\_ViewImports.cshtml"
using CoreApiUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Project\CoreApi-28-02-2020\AgnejaDemo\CoreApi-28-02-2020\CoreApi\CoreApiUI\Views\_ViewImports.cshtml"
using CoreApiUI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b1985fa2eb2d2c8e2101547ce0893da17e86bd5b", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9dcbabd4abb82e07208548c44beb819e97b9ad35", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE html>  \r\n<html>  \r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b1985fa2eb2d2c8e2101547ce0893da17e86bd5b3308", async() => {
                WriteLiteral(@"  
    <title></title>  
    <meta charset=""utf-8"" />  
<script type=""text/javascript"" src=""https://code.jquery.com/jquery-1.7.1.min.js""></script>
<link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"" integrity=""sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"" crossorigin=""anonymous"">
<script src=""https://code.jquery.com/jquery-3.2.1.slim.min.js"" integrity=""sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"" crossorigin=""anonymous""></script>
<script src=""https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"" integrity=""sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"" crossorigin=""anonymous""></script>
<script src=""https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"" integrity=""sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"" crossorigin=""anonymous""></script>
<style>
    .displayNone{
        display:none;
    }
</style>
   <sc");
                WriteLiteral(@"ript>  
    $(document).ready(function () { 
         loadData();
        bindManager();
        bindSupervisor();
       
        
        $('input[type=radio][name=employeeType]').change(function() {
            if (this.value == 'manager') {
               $('#divPayPerHour').addClass('displayNone');
               $('#divAnnualSalary').removeClass('displayNone');
               $('#divMaxExpenseAmount').removeClass('displayNone');
            }
            else if (this.value == 'supervisor') {
                $('#divPayPerHour').addClass('displayNone');
               $('#divAnnualSalary').addClass('displayNone');
               $('#divMaxExpenseAmount').removeClass('displayNone');
            }else{
                $('#divPayPerHour').removeClass('displayNone');
               $('#divAnnualSalary').addClass('displayNone');
               $('#divMaxExpenseAmount').addClass('displayNone');
            }
        });
    }); 
    
    function loadData(){
         $.ajax({  
     ");
                WriteLiteral(@"       type: ""GET"",  
            url: ""https://localhost:44326/api/Employee"",  
            contentType: ""application/json; charset=utf-8"",  
            dataType: ""json"",  
            success: function (data) {  
                //alert(JSON.stringify(data));                  
                $(""#DIV"").html('');   
                var DIV = '';  
                $.each(data, function (i, item) {  
                    var rows = ""<tr>"" +  
                        ""<td>"" + item.employeeID + ""</td>"" +  
                        ""<td>"" + item.employeeName + ""</td>"" +  
                        ""<td>"" + item.employeeAddress1 + ""</td>"" +  
                        ""<td>"" + item.payPerHour + ""</td>"" +  

                        ""<td>"" + item.managerName + ""</td>"" + 
                        ""<td>"" + item.managerAddress1 + ""</td>"" + 
                        ""<td>"" + item.managerAnnualSalary + ""</td>"" + 
                         ""<td>"" + item.maxExpenseAmount + ""</td>"" + 

                        ""<");
                WriteLiteral(@"td>"" + item.supervisorName + ""</td>"" + 
                         ""<td>"" + item.supervisorAddress1 + ""</td>"" + 
                          ""<td>"" + item.supervisorAnnualSalary + ""</td>"" + 
                        ""</tr>"";  
                    $('#Table').append(rows);  
                }); //End of foreach Loop   
                console.log(data);  
            }, //End of AJAX Success function  
  
            failure: function (data) {  
                alert(data.responseText);  
            }, //End of AJAX failure function  
            error: function (data) {  
                alert(data.responseText);  
            } //End of AJAX error function  
  
        }); 
    }
    function bindManager(){

        var ddlManager = $('#ddlManager');  
        ddlManager.append($(""<option></option>"").val('').html('Please Select Manager'));  
        $.ajax({  
            url: 'https://localhost:44326/api/Employee/GetManagerList',  
            type: 'GET',  
            dataType: 'json'");
                WriteLiteral(@",  
            success: function (d) {  
                $.each(d, function (i, val) {  
                    ddlManager.append($(""<option></option>"").val(val.managerID).html(val.managerName));  
                });  
            },  
            error: function () {  
                alert('Error!');  
            }  
        });  
    }

    function bindSupervisor(){

         var ddlSupervisor = $('#ddlSupervisor');  
        ddlSupervisor.append($(""<option></option>"").val('').html('Please Select Supervisor'));  
        $.ajax({  
            url: 'https://localhost:44326/api/Employee/GetManagerList',  
            type: 'GET',  
            dataType: 'json',  
            success: function (d) {  
                $.each(d, function (i, val) {  
                    ddlSupervisor.append($(""<option></option>"").val(val.managerID).html(val.managerName));  
                });  
            },  
            error: function () {  
                alert('Error!');  
            }  
 ");
                WriteLiteral(@"       });  
    }

    //Add Data Function   
function Add() {  
    
    var isManager=false;
    var isSupervisor=false;
    var managerId=0;
    var supervisorId=0;
    var employeeType =$('input[type=radio][name=employeeType]:checked').val();
    if(employeeType=='manager'){
        isManager=true;
       
    }else if(employeeType=='supervisor'){
        isSupervisor=true;
         supervisorId=$('#ddlSupervisor').val();
    }else{
         managerId=$('#ddlManager').val();
         supervisorId=$('#ddlSupervisor').val();
    }

    var empObj = {  
        EmployeeID: $('#EmployeeID').val(),  
        FirstName: $('#FirstName').val(),  
        LastName: $('#LastName').val(),  
        Address1: $('#Address1').val(),  
        PayPerHour: $('#PayPerHour').val() ,
        ManagerID: managerId ,
        SupervisorID: supervisorId ,
        AnnualSalary: $('#AnnualSalary').val() ,
        MaxExpenseAmount: $('#MaxExpenseAmount').val() ,
         IsManager: isManager ,
    ");
                WriteLiteral(@"      IsSupervisor: isSupervisor ,
    };  
    $.ajax({  
        url: ""https://localhost:44326/api/Employee/AddEmployee"",  
        data: JSON.stringify(empObj),  
        type: ""POST"",  
        contentType: ""application/json;charset=utf-8"",  
        dataType: ""json"",  
        success: function (result) {  
            //loadData();  
            location.reload();
            $('#myModal').modal('hide');  
        },  
        error: function (errormessage) {  
            alert(errormessage.responseText);  
        }  
    });  
}  
  
</script> 
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("  \r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b1985fa2eb2d2c8e2101547ce0893da17e86bd5b11319", async() => {
                WriteLiteral(@"  
          <button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target=""#myModal"">Add New Employee</button><br /><br />  
<br />
   <div class=""panel panel-primary"">  
    <div class=""panel-heading"">  
    </div>   <!--en dof panel-heading -->
    </div>
    <div class=""panel-body"">  
        <table class=""table table-bordered"" id=""Table"">  
            <tr>  
                <th>EmployeeID</th>  
                <th>EmployeeName</th>  
                <th>EmployeeAddress1</th>  
                <th>PayPerHour</th>  

                 <th>ManagerName</th> 
                  <th>ManagerAddress1</th> 
                   <th>ManagerAnnualSalary</th> 
                     <th>MaxExpenseAmount</th> 
                   
                    <th>SupervisorName</th>  
                  <th>SupervisorAddress1</th>  
                    <th>SupervisorAnnualSalary</th>  
            </tr>   <!--end of table-row -->
        </table>   <!--end of table -->
    </div> <!--end of ");
                WriteLiteral(@"Panel-body -->      
<!--end of Panel -->  

 <div class=""modal fade"" id=""myModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">  
        <div class=""modal-dialog"">  
            <div class=""modal-content"">  
                <div class=""modal-header"">  
                    <button type=""button"" class=""close"" data-dismiss=""modal"">×</button>  
                    <h4 class=""modal-title"" id=""myModalLabel"">Add Employee</h4>  
                </div>  
                <div class=""modal-body"">

                    <div class=""form-group"">  
                            <label for=""EmployeeId"">EmployeeId</label>  
                            <input type=""text"" class=""form-control"" id=""EmployeeID"" placeholder=""Id"" disabled=""disabled""/>  
                        </div>  
                        <div class=""form-group"">  
                            <label>First Name</label>  
                            <input type=""text"" class=""form-control"" id=""FirstName"" placeholder");
                WriteLiteral(@"=""First Name""/>  
                        </div>  
                        <div class=""form-group"">  
                            <label>Last Name</label>  
                            <input type=""text"" class=""form-control"" id=""LastName"" placeholder=""Last Name""/>  
                        </div>  
                         <div class=""form-group"">  
                            <label>Address 1</label>  
                            <input type=""text"" class=""form-control"" id=""Address1"" placeholder=""Address 1""/>  
                        </div>

                          <div class=""form-group"">  
                           <p>Please select Employee Type:</p>
                            <input type=""radio""checked id=""rdemployee"" name=""employeeType"" value=""employee"">
                            <label>Employee</label><br>
                            <input type=""radio"" id=""rdmanager"" name=""employeeType"" value=""manager"">
                            <label>Manager</label><br>
                      ");
                WriteLiteral(@"      <input type=""radio"" id=""rdsupervisor"" name=""employeeType"" value=""supervisor"">
                            <label>Supervisor</label>
                        </div> 

                         <div class=""form-group"" id=""divPayPerHour"">  
                            <label>Pay Per Hour</label>  
                            <input type=""number"" class=""form-control"" id=""PayPerHour"" placeholder=""PayPerHour""/>  
                        </div>
                         <div class=""form-group displayNone"" id=""divAnnualSalary"">  
                            <label>Annual Salary</label>  
                            <input type=""number"" class=""form-control"" id=""AnnualSalary"" placeholder=""Annual Salary""/>  
                        </div>
                        <div class=""form-group displayNone"" id=""divMaxExpenseAmount"">  
                            <label>Max ExpenseAmount</label>  
                            <input type=""number"" class=""form-control"" id=""MaxExpenseAmount"" placeholder=""Max ExpenseAm");
                WriteLiteral(@"ount""/>  
                        </div> 
                        
                        <div class=""form-group"" id=""divddlManager"">  
                            <label class=""col-md-4 control-label"">Manager</label>  
                            <div class=""col-md-6"">  
                                <select class=""form-control"" id=""ddlManager""></select><br />  
                            </div>  
                        </div> 

                          <div class=""form-group"" id=""divddlSupervisor"">  
                            <label class=""col-md-4 control-label"">Supervisor</label>  
                            <div class=""col-md-6"">  
                                <select class=""form-control"" id=""ddlSupervisor""></select><br />  
                            </div>  
                        </div> 
                       

                    </div>  
                <div class=""modal-footer"">  
                    <button type=""button"" class=""btn btn-primary"" id=""btnAdd"" onclic");
                WriteLiteral("k=\"return Add();\">Add</button>  \r\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>  \r\n                </div>  \r\n            </div>  \r\n        </div>          \r\n    </div>  \r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("  \r\n\r\n\r\n</html> ");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
